[
    {
        "id": 0,
        "question_text": "which creatures not speaking draconic language do have chaotic good alignment?",
        "sparql_query": "SELECT ?creatures WHERE {  ?creatures <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?creatures <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }",
        "llm_extracted_entity_names": "Local Graph, no entity extraction needed",
        "wikidata_entities_resolved": "Local Graph, no entity resolving needed",
        "llm_generated_sparql": "SELECT ?creature WHERE { ?creature a :Beast ; :hasAlignment :ChaoticGood ; :hasLanguages ?language . FILTER(?language != :Draconic) }",
        "sparql_comparison_result": {
            "baseline_entities": [],
            "llm_entities": [],
            "is_correct": "Invalid"
        }
    },
    {
        "id": 1,
        "question_text": "does Caypup have more special abilities than Aasimar?",
        "sparql_query": "SELECT (if(COUNT(?cay_SpecAbils)>COUNT(?aas_SpecAbils), 'True', 'False') as ?res) WHERE {  <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasSpecAbils> ?cay_SpecAbils. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasSpecAbils> ?aas_SpecAbils }",
        "llm_extracted_entity_names": "Local Graph, no entity extraction needed",
        "wikidata_entities_resolved": "Local Graph, no entity resolving needed",
        "llm_generated_sparql": "SELECT (COUNT(?abilityCaypup) AS ?countCaypup) (COUNT(?abilityAasimar) AS ?countAasimar) WHERE { { ?caypup a :Beast ; :hasSpecAbils ?abilityCaypup . FILTER(?caypup = :Caypup) } UNION { ?aasimar a :Beast ; :hasSpecAbils ?abilityAasimar . FILTER(?aasimar = :Aasimar) } } GROUP BY ?caypup ?aasimar HAVING (?countCaypup > ?countAasimar)",
        "sparql_comparison_result": {
            "baseline_entities": [],
            "llm_entities": [],
            "is_correct": "Invalid"
        }
    },
    {
        "id": 2,
        "question_text": "how many creatures with non-neutral alignment do speak treant language?",
        "sparql_query": "SELECT (COUNT(?creatures) as ?n_creatures) WHERE {  ?creatures <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?creatures <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?creatures <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?creatures <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }",
        "llm_extracted_entity_names": "Local Graph, no entity extraction needed",
        "wikidata_entities_resolved": "Local Graph, no entity resolving needed",
        "llm_generated_sparql": "SELECT (COUNT(?creature) AS ?count) WHERE { ?creature rdf:type :Beast . ?creature :hasAlignment ?alignment . FILTER(?alignment != :Neutral) . ?creature :hasLanguages :Treant . }",
        "sparql_comparison_result": {
            "baseline_entities": [],
            "llm_entities": [],
            "is_correct": "Invalid"
        }
    },
    {
        "id": 3,
        "question_text": "what spells Aasimar and Caypup do have in common?",
        "sparql_query": "SELECT ?common_spells WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?common_spells. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?common_spells }",
        "llm_extracted_entity_names": "Local Graph, no entity extraction needed",
        "wikidata_entities_resolved": "Local Graph, no entity resolving needed",
        "llm_generated_sparql": "SELECT ?spell WHERE { { ?aasimar :canSpell ?spell . } UNION { ?caypup :canSpell ?spell . } FILTER EXISTS { ?aasimar :canSpell ?spell . ?caypup :canSpell ?spell . } }",
        "sparql_comparison_result": {
            "baseline_entities": [],
            "llm_entities": [],
            "is_correct": "Invalid"
        }
    },
    {
        "id": 4,
        "question_text": "is the number of creatures speaking both abyssal and aklo languages greater than infernal and terran?",
        "sparql_query": "SELECT (if(?n_creatures_1>?n_creatures_2, 'True', 'False') as ?res) WHERE {  {SELECT (COUNT(?creatures_1) as ?n_creatures_1) WHERE { ?creatures_1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#AbyssalL>; <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#AkloL>}} {SELECT (COUNT(?creatures_2) as ?n_creatures_2) WHERE { ?creatures_2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#InfernalL>; <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TerranL>}} }",
        "llm_extracted_entity_names": "Local Graph, no entity extraction needed",
        "wikidata_entities_resolved": "Local Graph, no entity resolving needed",
        "llm_generated_sparql": "SELECT (COUNT(DISTINCT ?creature) AS ?countAbyssalAklo) (COUNT(DISTINCT ?creatureInfernalTerran) AS ?countInfernalTerran) WHERE { { SELECT ?creature WHERE { ?creature :hasLanguages :Abyssal ; :hasLanguages :Aklo . } GROUP BY ?creature } UNION { SELECT ?creatureInfernalTerran WHERE { ?creatureInfernalTerran :hasLanguages :Infernal ; :hasLanguages :Terran . } GROUP BY ?creatureInfernalTerran } }",
        "sparql_comparison_result": {
            "baseline_entities": [],
            "llm_entities": [],
            "is_correct": "Invalid"
        }
    },
    {
        "id": 5,
        "question_text": "what is the most common alignment type?",
        "sparql_query": "SELECT ?Alignment WHERE { ?subjects <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?Alignment } GROUP BY ?Alignment ORDER BY DESC (COUNT(?Alignment)) LIMIT 1",
        "llm_extracted_entity_names": "Local Graph, no entity extraction needed",
        "wikidata_entities_resolved": "Local Graph, no entity resolving needed",
        "llm_generated_sparql": "SELECT ?alignment (COUNT(?alignment) AS ?count) WHERE { ?beast :hasAlignment ?alignment } GROUP BY ?alignment ORDER BY DESC(?count) LIMIT 1",
        "sparql_comparison_result": {
            "baseline_entities": [],
            "llm_entities": [],
            "is_correct": "Invalid"
        }
    },
    {
        "id": 6,
        "question_text": "how many types of robots are among creatures?",
        "sparql_query": "SELECT (COUNT(?creatures) as ?n_robots)  WHERE {  ?creatures <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#Beast>  FILTER regex(str(?creatures), 'robot', 'i' )  }",
        "llm_extracted_entity_names": "Local Graph, no entity extraction needed",
        "wikidata_entities_resolved": "Local Graph, no entity resolving needed",
        "llm_generated_sparql": "SELECT (COUNT(DISTINCT ?robotType) AS ?numberOfRobotTypes) WHERE { ?robotType rdf:type :Beast . }",
        "sparql_comparison_result": {
            "baseline_entities": [],
            "llm_entities": [],
            "is_correct": "Invalid"
        }
    },
    {
        "id": 7,
        "question_text": "is there any type of troll with good alignment?",
        "sparql_query": "ASK   WHERE {   ?creatures <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood>; <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#neutralGood>; <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulGood> FILTER regex(str(?creatures), 'troll', 'i') }",
        "llm_extracted_entity_names": "Local Graph, no entity extraction needed",
        "wikidata_entities_resolved": "Local Graph, no entity resolving needed",
        "llm_generated_sparql": "SELECT ?troll WHERE { ?troll rdf:type :Beast . ?troll :hasAlignment ?alignment . FILTER(?alignment = :GoodAlignment) }",
        "sparql_comparison_result": {
            "baseline_entities": [],
            "llm_entities": [],
            "is_correct": "Invalid"
        }
    },
    {
        "id": 8,
        "question_text": "are creatures with good alignment more common than evil?",
        "sparql_query": "SELECT ?res  WHERE {  {SELECT (COUNT(?good) as ?n_good)  WHERE{  ?creatures <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?Alignment  BIND(str(?Alignment) as ?good)  FILTER regex(?good, 'good', 'i')} }  {SELECT (COUNT(?evil) as ?n_evil)  WHERE{ ?creatures <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?Alignment  BIND(str(?Alignment) as ?evil)  FILTER regex(?evil, 'evil', 'i')} }  BIND(if((?n_good>?n_evil), 'True', 'False') as ?res)  }",
        "llm_extracted_entity_names": "Local Graph, no entity extraction needed",
        "wikidata_entities_resolved": "Local Graph, no entity resolving needed",
        "llm_generated_sparql": "SELECT (COUNT(?good) AS ?countGood) (COUNT(?evil) AS ?countEvil) WHERE { { SELECT ?good WHERE { ?creature a :Beast ; :hasAlignment :Good . } GROUP BY ?good } UNION { SELECT ?evil WHERE { ?creature a :Beast ; :hasAlignment :Evil . } GROUP BY ?evil } }",
        "sparql_comparison_result": {
            "baseline_entities": [],
            "llm_entities": [],
            "is_correct": "Invalid"
        }
    },
    {
        "id": 9,
        "question_text": "what creatures do have cold resist?",
        "sparql_query": "SELECT  DISTINCT ?creatures WHERE { ?creatures <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }",
        "llm_extracted_entity_names": "Local Graph, no entity extraction needed",
        "wikidata_entities_resolved": "Local Graph, no entity resolving needed",
        "llm_generated_sparql": "SELECT ?creature WHERE { ?creature rdf:type :Beast . ?creature :hasResists :Resists . }",
        "sparql_comparison_result": {
            "baseline_entities": [],
            "llm_entities": [],
            "is_correct": "Invalid"
        }
    },
    {
        "id": 10,
        "question_text": "what percentage of dragons do speak both draconic and common languages?",
        "sparql_query": "SELECT ((?n_dragon_with_languages/?n_dragons)*100 as ?percentage) WHERE { {SELECT (COUNT(DISTINCT(?dragon)) as ?n_dragons) WHERE {  ?creatures <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#Beast>; <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> ?language BIND(str(?creatures) as ?dragon) FILTER regex(?dragon,'dragon', 'i')}} {SELECT (COUNT(DISTINCT(?dragon_with_languages)) as ?n_dragon_with_languages) WHERE {  ?creatures <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>; <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#CommonL> BIND(str(?creatures) as ?dragon_with_languages) FILTER regex(?dragon_with_languages,'dragon', 'i')}} }",
        "llm_extracted_entity_names": "Local Graph, no entity extraction needed",
        "wikidata_entities_resolved": "Local Graph, no entity resolving needed",
        "llm_generated_sparql": "SELECT (COUNT(?dragon) AS ?totalDragons) (COUNT(?dragonWithLanguages) AS ?dragonsSpeakingBoth) (IF(COUNT(?dragon) = 0, 0, (COUNT(?dragonWithLanguages) * 100.0 / COUNT(?dragon))) AS ?percentage) WHERE { \n  ?dragon rdf:type :Beast . \n  ?dragon :hasLanguages ?language . \n  FILTER(?language IN (:Draconic, :Common)) . \n  BIND(IF(?language = :Draconic, ?dragon, UNDEF) AS ?dragonWithLanguages) \n} GROUP BY ?dragon  HAVING (COUNT(DISTINCT ?language) = 2)",
        "sparql_comparison_result": {
            "baseline_entities": [],
            "llm_entities": [],
            "is_correct": "Invalid"
        }
    },
    {
        "id": 11,
        "question_text": "what are the top-5 languages by popularity among creatures?",
        "sparql_query": "SELECT ?top5_languages WHERE { ?creatures <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> ?top5_languages } GROUP BY ?top5_languages ORDER BY DESC (COUNT(?top5_languages)) LIMIT 5",
        "llm_extracted_entity_names": "Local Graph, no entity extraction needed",
        "wikidata_entities_resolved": "Local Graph, no entity resolving needed",
        "llm_generated_sparql": "SELECT ?language (COUNT(?creature) AS ?popularity) WHERE { ?creature a :Beast; :hasLanguages ?language. } GROUP BY ?language ORDER BY DESC(?popularity) LIMIT 5",
        "sparql_comparison_result": {
            "baseline_entities": [],
            "llm_entities": [],
            "is_correct": "Invalid"
        }
    },
    {
        "id": 12,
        "question_text": "do dragons in average speak more languages than demons?",
        "sparql_query": "SELECT (if(AVG(?drag_n_lang)>AVG(?dem_n_lang), 'True', 'False') as ?res) WHERE { {SELECT (COUNT(?language_1) as ?drag_n_lang)  WHERE {   ?creatures_1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#Beast>;  <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> ?language_1  FILTER regex(str(?creatures_1),'dragon', 'i')} GROUP BY ?creatures_1} {SELECT (COUNT(?language_2) as ?dem_n_lang)  WHERE {   ?creatures_2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#Beast>;  <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> ?language_2  FILTER regex(str(?creatures_2),'demon', 'i')} GROUP BY ?creatures_2} }",
        "llm_extracted_entity_names": "Local Graph, no entity extraction needed",
        "wikidata_entities_resolved": "Local Graph, no entity resolving needed",
        "llm_generated_sparql": "SELECT (AVG(?dragonLangCount) AS ?avgDragonLang) (AVG(?demonLangCount) AS ?avgDemonLang) WHERE { { SELECT (COUNT(?language) AS ?dragonLangCount) WHERE { ?dragon rdf:type :Dragon ; :hasLanguages ?language . } } UNION { SELECT (COUNT(?language) AS ?demonLangCount) WHERE { ?demon rdf:type :Demon ; :hasLanguages ?language . } } }",
        "sparql_comparison_result": {
            "baseline_entities": [],
            "llm_entities": [],
            "is_correct": "Invalid"
        }
    },
    {
        "id": 13,
        "question_text": "what creatures do speak both common and undercommon languages?",
        "sparql_query": "SELECT ?creatures WHERE { ?creatures <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#CommonL>; <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#UndercommonL> }",
        "llm_extracted_entity_names": "Local Graph, no entity extraction needed",
        "wikidata_entities_resolved": "Local Graph, no entity resolving needed",
        "llm_generated_sparql": "SELECT ?creature WHERE { ?creature a :Beast ; :hasLanguages ?language . FILTER(?language IN (:Common, :Undercommon)) }",
        "sparql_comparison_result": {
            "baseline_entities": [],
            "llm_entities": [],
            "is_correct": "Invalid"
        }
    },
    {
        "id": 14,
        "question_text": "how many creatures do speak abyssal, sylvan and elven languages?",
        "sparql_query": "SELECT (COUNT(?creatures) as ?n_creatures) WHERE { ?creatures <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#AbyssalL>; <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#SylvanL>; <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#ElvenL> }",
        "llm_extracted_entity_names": "Local Graph, no entity extraction needed",
        "wikidata_entities_resolved": "Local Graph, no entity resolving needed",
        "llm_generated_sparql": "SELECT (COUNT(?creature) AS ?count) WHERE { ?creature a :Beast ; :hasLanguages ?language . FILTER(?language IN (:Abyssal, :Sylvan, :Elven)) } GROUP BY ?creature HAVING (COUNT(DISTINCT ?language) = 3)",
        "sparql_comparison_result": {
            "baseline_entities": [],
            "llm_entities": [],
            "is_correct": "Invalid"
        }
    },
    {
        "id": 15,
        "question_text": "is there any type of zombie with chaotic evil or chaotic neutral alignment?",
        "sparql_query": "SELECT (if(?n_zombies_1+?n_zombies_2 > 0, 'True', 'False') as ?res) WHERE {    {SELECT (COUNT(?creatures_1) as ?n_zombies_1) WHERE {  ?creatures_1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticEvil>.   FILTER (regex(str(?creatures_1), 'zombie', 'i' ))}} {SELECT (COUNT(?creatures_2) as ?n_zombies_2) WHERE {  ?creatures_2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>.   FILTER (regex(str(?creatures_2), 'zombie', 'i' ))}} }",
        "llm_extracted_entity_names": "Local Graph, no entity extraction needed",
        "wikidata_entities_resolved": "Local Graph, no entity resolving needed",
        "llm_generated_sparql": "SELECT ?zombie WHERE { ?zombie rdf:type :Beast . ?zombie :hasAlignment ?alignment . FILTER(?alignment IN (:ChaoticEvil, :ChaoticNeutral)) }",
        "sparql_comparison_result": {
            "baseline_entities": [],
            "llm_entities": [],
            "is_correct": "Invalid"
        }
    },
    {
        "id": 16,
        "question_text": "does Trox speak more languages than Sunlord?",
        "sparql_query": "SELECT (if((COUNT(?trox_lang) > COUNT(?sunlord_lang)), 'True', 'False') as ?res)   WHERE {   <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#Trox> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> ?trox_lang.  <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#Sunlord> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> ?sunlord_lang}",
        "llm_extracted_entity_names": "Local Graph, no entity extraction needed",
        "wikidata_entities_resolved": "Local Graph, no entity resolving needed",
        "llm_generated_sparql": "SELECT (COUNT(DISTINCT ?langTrox) AS ?countTrox) (COUNT(DISTINCT ?langSunlord) AS ?countSunlord) WHERE { { ?trox :hasLanguages ?langTrox . FILTER(?trox = :Trox) } UNION { ?sunlord :hasLanguages ?langSunlord . FILTER(?sunlord = :Sunlord) } } GROUP BY ?trox ?sunlord HAVING (?countTrox > ?countSunlord)",
        "sparql_comparison_result": {
            "baseline_entities": [],
            "llm_entities": [],
            "is_correct": "Invalid"
        }
    },
    {
        "id": 17,
        "question_text": "does Einherji and Balor have any common language?",
        "sparql_query": "ASK WHERE {  <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#Einherji> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> ?common_language.  <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#Balor> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> ?common_language }",
        "llm_extracted_entity_names": "Local Graph, no entity extraction needed",
        "wikidata_entities_resolved": "Local Graph, no entity resolving needed",
        "llm_generated_sparql": "PREFIX : <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#>\nSELECT ?language WHERE { \n  { :Einherji :hasLanguages ?language . } \n  INTERSECT \n  { :Balor :hasLanguages ?language . } \n}",
        "sparql_comparison_result": {
            "baseline_entities": [],
            "llm_entities": [],
            "is_correct": "Invalid"
        }
    },
    {
        "id": 18,
        "question_text": "how many creatures with lawful neutral alignment can speak giant language?",
        "sparql_query": "SELECT (COUNT(?creatures) as ?n_creatures) WHERE {  ?creatures <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>.  ?creatures <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#GiantL>}",
        "llm_extracted_entity_names": "Local Graph, no entity extraction needed",
        "wikidata_entities_resolved": "Local Graph, no entity resolving needed",
        "llm_generated_sparql": "SELECT (COUNT(?creature) AS ?count) WHERE { ?creature a :Beast ; :hasAlignment :LawfulNeutral ; :hasLanguages :Giant . }",
        "sparql_comparison_result": {
            "baseline_entities": [],
            "llm_entities": [],
            "is_correct": "Invalid"
        }
    },
    {
        "id": 19,
        "question_text": "which ogres with lawful evil alignment can speak common language?",
        "sparql_query": "SELECT ?ogres  WHERE {   ?ogres <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#CommonL>;  <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulEvil>  FILTER regex(str(?ogres), 'ogre', 'i') }",
        "llm_extracted_entity_names": "Local Graph, no entity extraction needed",
        "wikidata_entities_resolved": "Local Graph, no entity resolving needed",
        "llm_generated_sparql": "SELECT ?ogre WHERE { ?ogre rdf:type :Beast . ?ogre :hasAlignment :LawfulEvil . ?ogre :hasLanguages :Common . }",
        "sparql_comparison_result": {
            "baseline_entities": [],
            "llm_entities": [],
            "is_correct": "Invalid"
        }
    }
]