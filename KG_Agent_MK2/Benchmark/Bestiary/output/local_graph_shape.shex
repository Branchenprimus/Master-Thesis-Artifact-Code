PREFIX : <http://weso.es/shapes/>
PREFIX brick: <https://brickschema.org/schema/Brick#>
PREFIX csvw: <http://www.w3.org/ns/csvw#>
PREFIX dc: <http://purl.org/dc/elements/1.1/>
PREFIX dcat: <http://www.w3.org/ns/dcat#>
PREFIX dcmitype: <http://purl.org/dc/dcmitype/>
PREFIX dcterms: <http://purl.org/dc/terms/>
PREFIX dcam: <http://purl.org/dc/dcam/>
PREFIX doap: <http://usefulinc.com/ns/doap#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX geo: <http://www.opengis.net/ont/geosparql#>
PREFIX odrl: <http://www.w3.org/ns/odrl/2/>
PREFIX org: <http://www.w3.org/ns/org#>
PREFIX prof: <http://www.w3.org/ns/dx/prof/>
PREFIX prov: <http://www.w3.org/ns/prov#>
PREFIX qb: <http://purl.org/linked-data/cube#>
PREFIX schema: <https://schema.org/>
PREFIX sh: <http://www.w3.org/ns/shacl#>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX sosa: <http://www.w3.org/ns/sosa/>
PREFIX ssn: <http://www.w3.org/ns/ssn/>
PREFIX time: <http://www.w3.org/2006/time#>
PREFIX vann: <http://purl.org/vocab/vann/>
PREFIX void: <http://rdfs.org/ns/void#>
PREFIX wgs: <https://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX xml: <http://www.w3.org/XML/1998/namespace/>
PREFIX : <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#>

:Beast
{
   rdf:type  [:Beast]  ;
   rdf:type  [owl:NamedIndividual]  ;
   :hasAlignment  @:Alignment  ;
   :hasTouchValue  xsd:integer  ?;
   :hasFortValue  xsd:integer  ?;
   :hasWillValue  xsd:integer  ?;
   :hasRefValue  xsd:integer  ?;
   :hasACValue  xsd:integer  ?;
   :hasHPvalue  xsd:integer  ?;
   :hasInitValue  xsd:integer  ?;
   :hasFlatFootedValue  xsd:integer  ?;
   :cha  xsd:integer  ?;
   :atk  xsd:integer  ?;
   :hasXPValue  xsd:integer  ?;
   :wis  xsd:integer  ?;
   :dex  xsd:integer  ?;
   :cmb  xsd:integer  ?;
   :cmd  xsd:integer  ?;
   :str  xsd:integer  ?;
   :hasCRValue  xsd:integer  ?;
   :hasSpeedValue  xsd:integer  ?;
   :int  xsd:integer  ?;
   :con  xsd:integer  ?;
   :hasLanguages  @:Language  *;
   :hasCRValue  xsd:double  ?;
   :int  xsd:positiveInteger  ?;
   :con  xsd:positiveInteger  ?;
   :cha  xsd:positiveInteger  ?;
   :hasTouchValue  xsd:positiveInteger  ?;
   :hasSpeedValue  xsd:positiveInteger  ?;
   :str  xsd:positiveInteger  ?;
   :dex  xsd:positiveInteger  ?;
   :cmd  xsd:positiveInteger  ?;
   :hasFlatFootedValue  xsd:positiveInteger  ?;
   :wis  xsd:positiveInteger  ?;
   :hasXPValue  xsd:positiveInteger  ?;
   :hasSpecAbils  @:SpecialAbilities  *;
   :hasACvalue  xsd:positiveInteger  ?;
   :hasOrganization  @:Organization  *;
   :hasEnvironment  @:NamedIndividual  *;
   :canRanged  xsd:boolean  ?;
   :hasResists  @:NamedIndividual  *;
   :hasCRvalue  xsd:float  ?;
   :canSpell  @:NamedIndividual  *;
   :hasHPValue  xsd:integer  ?;
   :hasFeats  @:Feats  *;
   :canMelee  xsd:boolean  ?;
   :hasFortValue  xsd:positiveInteger  ?;
   :hasRefValue  xsd:positiveInteger  ?;
   :hasWillValue  xsd:positiveInteger  ?;
   :hasLevel  xsd:positiveInteger  ?;
   :hasTreasure  @:Treasure  ?
}


:NamedIndividual
{
   rdf:type  [owl:NamedIndividual]  ;
   rdf:type  [:Beast]  ?;
   :hasAlignment  @:Alignment  ?;
   :hasTouchValue  xsd:integer  ?;
   :hasFortValue  xsd:integer  ?;
   :hasWillValue  xsd:integer  ?;
   :hasRefValue  xsd:integer  ?;
   :hasACValue  xsd:integer  ?;
   :hasHPvalue  xsd:integer  ?;
   :hasInitValue  xsd:integer  ?;
   :hasFlatFootedValue  xsd:integer  ?;
   :cha  xsd:integer  ?;
   :atk  xsd:integer  ?;
   :hasXPValue  xsd:integer  ?;
   :wis  xsd:integer  ?;
   :dex  xsd:integer  ?;
   :cmb  xsd:integer  ?;
   :cmd  xsd:integer  ?;
   :str  xsd:integer  ?;
   :hasCRValue  xsd:integer  ?;
   :hasSpeedValue  xsd:integer  ?;
   :int  xsd:integer  ?;
   :con  xsd:integer  ?;
   :hasLanguages  @:Language  *;
   :hasCRValue  xsd:double  ?;
   rdf:type  [:Language]  ?;
   rdf:type  [:Spells]  ?;
   rdf:type  [:Alignment]  ?;
   rdf:type  [:SpecialAbilities]  ?;
   rdf:type  [:Environment]  ?;
   rdf:type  [:Organization]  ?;
   rdf:type  [:Resists]  ?;
   rdf:type  [:Feats]  ?;
   :int  xsd:positiveInteger  ?;
   :con  xsd:positiveInteger  ?;
   :cha  xsd:positiveInteger  ?;
   :hasTouchValue  xsd:positiveInteger  ?;
   :hasSpeedValue  xsd:positiveInteger  ?;
   :str  xsd:positiveInteger  ?;
   :dex  xsd:positiveInteger  ?;
   :cmd  xsd:positiveInteger  ?;
   :hasFlatFootedValue  xsd:positiveInteger  ?;
   :wis  xsd:positiveInteger  ?;
   :hasXPValue  xsd:positiveInteger  ?;
   :hasSpecAbils  @:SpecialAbilities  *;
   :hasACvalue  xsd:positiveInteger  ?;
   :hasOrganization  @:Organization  *;
   :hasEnvironment  @:NamedIndividual  *;
   :canRanged  xsd:boolean  ?;
   :hasResists  @:NamedIndividual  *;
   :hasCRvalue  xsd:float  ?;
   :canSpell  @:NamedIndividual  *;
   :hasHPValue  xsd:integer  ?;
   :hasFeats  @:Feats  *;
   :canMelee  xsd:boolean  ?;
   rdf:type  [:Treasure]  ?;
   :hasFortValue  xsd:positiveInteger  ?;
   :hasRefValue  xsd:positiveInteger  ?;
   :hasWillValue  xsd:positiveInteger  ?;
   :hasLevel  xsd:positiveInteger  ?;
   :hasTreasure  @:Treasure  ?
}


:Language
{
   rdf:type  [owl:NamedIndividual]  ;
   rdf:type  [:Language]  
}


:FunctionalProperty
{
   rdf:type  [owl:FunctionalProperty]  ;
   rdfs:domain  @:Class  ;
   rdfs:range  IRI  ;
   rdf:type  [owl:DatatypeProperty]  ?;
   rdfs:subPropertyOf  IRI  ?;
   rdf:type  [owl:ObjectProperty]  ?
}


:DatatypeProperty
{
   rdf:type  [owl:DatatypeProperty]  ;
   rdf:type  [owl:FunctionalProperty]  ?;
   rdfs:domain  @:Class  ?;
   rdfs:range  IRI  ?;
   rdfs:subPropertyOf  @:DatatypeProperty  ?
}


:SpecialAbilities
{
   rdf:type  [owl:NamedIndividual]  ;
   rdf:type  [:SpecialAbilities]  
}


:Alignment
{
   rdf:type  [owl:NamedIndividual]  ;
   rdf:type  [:Alignment]  
}


:Spells
{
   rdf:type  [owl:NamedIndividual]  ;
   rdf:type  [:Spells]  
}


:Organization
{
   rdf:type  [:Organization]  ;
   rdf:type  [owl:NamedIndividual]  
}


:Class
{
   rdf:type  [owl:Class]  ?;
   rdfs:subClassOf  IRI  ?;
   owl:equivalentClass  BNode  ?
}


:Feats
{
   rdf:type  [:Feats]  ;
   rdf:type  [owl:NamedIndividual]  
}


:AnnotationProperty
{
   rdf:type  [owl:AnnotationProperty]  
}


:Environment
{
   rdf:type  [owl:NamedIndividual]  ;
   rdf:type  [:Environment]  
}


:Resists
{
   rdf:type  [owl:NamedIndividual]  ;
   rdf:type  [:Resists]  
}


:ObjectProperty
{
   rdf:type  [owl:ObjectProperty]  ;
   rdfs:domain  @:Class  ?;
   rdfs:subPropertyOf  @:ObjectProperty  ?;
   rdfs:range  @:Class  ?;
   rdf:type  [owl:FunctionalProperty]  ?
}


:Treasure
{
   rdf:type  [:Treasure]  ;
   rdf:type  [owl:NamedIndividual]  
}


:Ontology
{
   rdf:type  [owl:Ontology]  
}